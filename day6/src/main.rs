const INSTANCE: &'static [usize] = &[
    3, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 4, 1, 4, 1, 2, 1, 1, 2, 1, 3, 4, 5, 1, 1, 4, 1, 3, 3, 1, 1, 1,
    1, 3, 3, 1, 3, 3, 1, 5, 5, 1, 1, 3, 1, 1, 2, 1, 1, 1, 3, 1, 4, 3, 2, 1, 4, 3, 3, 1, 1, 1, 1, 5,
    1, 4, 1, 1, 1, 4, 1, 4, 4, 1, 5, 1, 1, 4, 5, 1, 1, 2, 1, 1, 1, 4, 1, 2, 1, 1, 1, 1, 1, 1, 5, 1,
    3, 1, 1, 4, 4, 1, 1, 5, 1, 2, 1, 1, 1, 1, 5, 1, 3, 1, 1, 1, 2, 2, 1, 4, 1, 3, 1, 4, 1, 2, 1, 1,
    1, 1, 1, 3, 2, 5, 4, 4, 1, 3, 2, 1, 4, 1, 3, 1, 1, 1, 2, 1, 1, 5, 1, 2, 1, 1, 1, 2, 1, 4, 3, 1,
    1, 1, 4, 1, 1, 1, 1, 1, 2, 2, 1, 1, 5, 1, 1, 3, 1, 2, 5, 5, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
    4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 4, 1, 1, 4, 1, 3, 4, 1, 5, 4, 2, 5, 1, 2, 1, 1, 1, 1, 1,
    1, 4, 3, 2, 1, 1, 3, 2, 5, 2, 5, 5, 1, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 3, 1, 4,
    1, 4, 2, 1, 3, 4, 1, 1, 1, 2, 3, 1, 1, 1, 4, 1, 2, 5, 1, 2, 1, 5, 1, 1, 2, 1, 2, 1, 1, 1, 1, 4,
    3, 4, 1, 5, 5, 4, 1, 1, 5, 2, 1, 3,
];

fn main() {
    println!("Part 1: {}", simulate(INSTANCE, 80));
    println!("Part 2: {}", simulate(INSTANCE, 256));
}

fn simulate(initital_state: &[usize], days: usize) -> usize {
    let mut state = [0; 9]; // histogram-like

    for &i in initital_state {
        state[i] += 1;
    }

    for _ in 0..days {
        let reseted = state[0];
        for i in 1..9 {
            state[i - 1] = state[i];
        }
        state[6] += reseted;
        state[8] = reseted;
    }

    state.iter().sum()
}

#[test]
fn test_simulate_80_days() {
    assert_eq!(simulate(&[3, 4, 3, 1, 2], 80), 5934);
}

#[test]
fn test_simulate_256_days() {
    assert_eq!(simulate(&[3, 4, 3, 1, 2], 256), 26984457539);
}
